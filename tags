!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DEBUG_INFO_HID	MCP2221A/lib/libmcp2221.c	18;"	d	file:
FLASH_SECTION_CHIPSETTINGS	MCP2221A/lib/libmcp2221.c	/^	FLASH_SECTION_CHIPSETTINGS		= 0x00,$/;"	e	enum:__anon2	file:
FLASH_SECTION_FACTORYSERIAL	MCP2221A/lib/libmcp2221.c	/^	FLASH_SECTION_FACTORYSERIAL		= 0x05,$/;"	e	enum:__anon2	file:
FLASH_SECTION_GPIOSETTINGS	MCP2221A/lib/libmcp2221.c	/^	FLASH_SECTION_GPIOSETTINGS		= 0x01,$/;"	e	enum:__anon2	file:
FLASH_SECTION_USBMANUFACTURER	MCP2221A/lib/libmcp2221.c	/^	FLASH_SECTION_USBMANUFACTURER	= 0x02,$/;"	e	enum:__anon2	file:
FLASH_SECTION_USBPRODUCT	MCP2221A/lib/libmcp2221.c	/^	FLASH_SECTION_USBPRODUCT		= 0x03,$/;"	e	enum:__anon2	file:
FLASH_SECTION_USBSERIAL	MCP2221A/lib/libmcp2221.c	/^	FLASH_SECTION_USBSERIAL			= 0x04,$/;"	e	enum:__anon2	file:
HID_REPORT_SIZE	MCP2221A/lib/libmcp2221.c	20;"	d	file:
LED_0_start	PCA9685/LUT_PCA9685_reg.c	4;"	d	file:
LED_multiplier	PCA9685/LUT_PCA9685_reg.c	5;"	d	file:
LIBMCP2221_H_	MCP2221A/lib/libmcp2221.h	10;"	d
LIB_EXPORT	MCP2221A/lib/libmcp2221.c	23;"	d	file:
LIB_EXPORT	MCP2221A/lib/libmcp2221.c	25;"	d	file:
MCP2221_ADC_COUNT	MCP2221A/lib/libmcp2221.h	18;"	d
MCP2221_ADC_REF_1024	MCP2221A/lib/libmcp2221.h	/^	MCP2221_ADC_REF_1024 = 3,	\/**< 1024mV Reference *\/$/;"	e	enum:__anon6
MCP2221_ADC_REF_2048	MCP2221A/lib/libmcp2221.h	/^	MCP2221_ADC_REF_2048 = 5,	\/**< 2048mV Reference *\/$/;"	e	enum:__anon6
MCP2221_ADC_REF_4096	MCP2221A/lib/libmcp2221.h	/^	MCP2221_ADC_REF_4096 = 7,	\/**< 4096mV Reference *\/$/;"	e	enum:__anon6
MCP2221_ADC_REF_OFF	MCP2221A/lib/libmcp2221.h	/^	MCP2221_ADC_REF_OFF = 1,	\/**< No reference *\/$/;"	e	enum:__anon6
MCP2221_ADC_REF_VDD	MCP2221A/lib/libmcp2221.h	/^	MCP2221_ADC_REF_VDD = 0		\/**< VDD Reference *\/$/;"	e	enum:__anon6
MCP2221_CLKDIV_128	MCP2221A/lib/libmcp2221.h	/^	MCP2221_CLKDIV_128 = 7,			\/**< 375KHz *\/$/;"	e	enum:__anon13
MCP2221_CLKDIV_16	MCP2221A/lib/libmcp2221.h	/^	MCP2221_CLKDIV_16 = 4,			\/**< 3MHz *\/$/;"	e	enum:__anon13
MCP2221_CLKDIV_2	MCP2221A/lib/libmcp2221.h	/^	MCP2221_CLKDIV_2 = 1,			\/**< 24MHz *\/$/;"	e	enum:__anon13
MCP2221_CLKDIV_32	MCP2221A/lib/libmcp2221.h	/^	MCP2221_CLKDIV_32 = 5,			\/**< 1.5MHz *\/$/;"	e	enum:__anon13
MCP2221_CLKDIV_4	MCP2221A/lib/libmcp2221.h	/^	MCP2221_CLKDIV_4 = 2,			\/**< 12MHz *\/$/;"	e	enum:__anon13
MCP2221_CLKDIV_64	MCP2221A/lib/libmcp2221.h	/^	MCP2221_CLKDIV_64 = 6,			\/**< 750KHz *\/$/;"	e	enum:__anon13
MCP2221_CLKDIV_8	MCP2221A/lib/libmcp2221.h	/^	MCP2221_CLKDIV_8 = 3,			\/**< 6MHz *\/$/;"	e	enum:__anon13
MCP2221_CLKDIV_RESERVED	MCP2221A/lib/libmcp2221.h	/^	MCP2221_CLKDIV_RESERVED = 0,	\/**< Invalid *\/$/;"	e	enum:__anon13
MCP2221_CLKDUTY_0	MCP2221A/lib/libmcp2221.h	/^	MCP2221_CLKDUTY_0 = 0x00,		\/**< 0% duty cycle, disabled *\/$/;"	e	enum:__anon14
MCP2221_CLKDUTY_25	MCP2221A/lib/libmcp2221.h	/^	MCP2221_CLKDUTY_25 = 0x08,		\/**< 25% *\/$/;"	e	enum:__anon14
MCP2221_CLKDUTY_50	MCP2221A/lib/libmcp2221.h	/^	MCP2221_CLKDUTY_50 = 0x10,		\/**< 50% *\/$/;"	e	enum:__anon14
MCP2221_CLKDUTY_75	MCP2221A/lib/libmcp2221.h	/^	MCP2221_CLKDUTY_75 = 0x18		\/**< 75% *\/$/;"	e	enum:__anon14
MCP2221_DAC_MAX	MCP2221A/lib/libmcp2221.h	17;"	d
MCP2221_DAC_REF_1024	MCP2221A/lib/libmcp2221.h	/^	MCP2221_DAC_REF_1024 = 3,	\/**< 1024mV Reference *\/$/;"	e	enum:__anon5
MCP2221_DAC_REF_2048	MCP2221A/lib/libmcp2221.h	/^	MCP2221_DAC_REF_2048 = 5,	\/**< 2048mV Reference *\/$/;"	e	enum:__anon5
MCP2221_DAC_REF_4096	MCP2221A/lib/libmcp2221.h	/^	MCP2221_DAC_REF_4096 = 7,	\/**< 4096mV Reference *\/$/;"	e	enum:__anon5
MCP2221_DAC_REF_OFF	MCP2221A/lib/libmcp2221.h	/^	MCP2221_DAC_REF_OFF = 1,	\/**< No reference *\/$/;"	e	enum:__anon5
MCP2221_DAC_REF_VDD	MCP2221A/lib/libmcp2221.h	/^	MCP2221_DAC_REF_VDD = 0		\/**< VDD Reference *\/$/;"	e	enum:__anon5
MCP2221_DEDIPIN_LEDI2C	MCP2221A/lib/libmcp2221.h	/^	MCP2221_DEDIPIN_LEDI2C = 4,$/;"	e	enum:__anon16
MCP2221_DEDIPIN_LEDUARTRX	MCP2221A/lib/libmcp2221.h	/^	MCP2221_DEDIPIN_LEDUARTRX = 6,$/;"	e	enum:__anon16
MCP2221_DEDIPIN_LEDUARTTX	MCP2221A/lib/libmcp2221.h	/^	MCP2221_DEDIPIN_LEDUARTTX = 5,$/;"	e	enum:__anon16
MCP2221_DEDIPIN_SSPND	MCP2221A/lib/libmcp2221.h	/^	MCP2221_DEDIPIN_SSPND = 3,$/;"	e	enum:__anon16
MCP2221_DEDIPIN_USBCFG	MCP2221A/lib/libmcp2221.h	/^	MCP2221_DEDIPIN_USBCFG = 2$/;"	e	enum:__anon16
MCP2221_DEFAULT_MANUFACTURER	MCP2221A/lib/libmcp2221.h	22;"	d
MCP2221_DEFAULT_PID	MCP2221A/lib/libmcp2221.h	21;"	d
MCP2221_DEFAULT_PRODUCT	MCP2221A/lib/libmcp2221.h	23;"	d
MCP2221_DEFAULT_VID	MCP2221A/lib/libmcp2221.h	20;"	d
MCP2221_ERROR	MCP2221A/lib/libmcp2221.h	/^	MCP2221_ERROR = -1,			\/**< General error *\/$/;"	e	enum:__anon3
MCP2221_ERROR_HID	MCP2221A/lib/libmcp2221.h	/^	MCP2221_ERROR_HID = -3		\/**< HIDAPI returned an error *\/$/;"	e	enum:__anon3
MCP2221_GPIO0	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO0 = 1,	\/**< GPIO0 *\/$/;"	e	enum:__anon17
MCP2221_GPIO1	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO1 = 2,	\/**< GPIO1 *\/$/;"	e	enum:__anon17
MCP2221_GPIO2	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO2 = 4,	\/**< GPIO2 *\/$/;"	e	enum:__anon17
MCP2221_GPIO3	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO3 = 8	\/**< GPIO3 *\/$/;"	e	enum:__anon17
MCP2221_GPIO_COUNT	MCP2221A/lib/libmcp2221.h	16;"	d
MCP2221_GPIO_DIR_INPUT	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO_DIR_INPUT = 1,			\/**< Input *\/$/;"	e	enum:__anon10
MCP2221_GPIO_DIR_INVALID	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO_DIR_INVALID = 0xEF		\/**< GPIO is not set as an input or output *\/$/;"	e	enum:__anon10
MCP2221_GPIO_DIR_OUTPUT	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO_DIR_OUTPUT = 0,		\/**< Output *\/$/;"	e	enum:__anon10
MCP2221_GPIO_MODE_ADC	MCP2221A/lib/libmcp2221.h	105;"	d
MCP2221_GPIO_MODE_ALT1	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO_MODE_ALT1 = 2,			\/**< Alternative function 1 *\/$/;"	e	enum:__anon8
MCP2221_GPIO_MODE_ALT2	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO_MODE_ALT2 = 3,			\/**< Alternative function 2 *\/$/;"	e	enum:__anon8
MCP2221_GPIO_MODE_ALT3	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO_MODE_ALT3 = 4,			\/**< Alternative function 3 *\/$/;"	e	enum:__anon8
MCP2221_GPIO_MODE_DAC	MCP2221A/lib/libmcp2221.h	106;"	d
MCP2221_GPIO_MODE_DEDI	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO_MODE_DEDI = 1,			\/**< Dedicated function *\/$/;"	e	enum:__anon8
MCP2221_GPIO_MODE_GPIO	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO_MODE_GPIO = 0,			\/**< Normal IO, manually set to input\/output, high\/low *\/$/;"	e	enum:__anon8
MCP2221_GPIO_MODE_INVALID	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO_MODE_INVALID = 0xff	\/**< Invalid *\/$/;"	e	enum:__anon8
MCP2221_GPIO_MODE_IOC	MCP2221A/lib/libmcp2221.h	107;"	d
MCP2221_GPIO_MODE_SSPND	MCP2221A/lib/libmcp2221.h	104;"	d
MCP2221_GPIO_VALUE_HIGH	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO_VALUE_HIGH = 1,		\/**< GPIO pin reads HIGH *\/$/;"	e	enum:__anon9
MCP2221_GPIO_VALUE_INVALID	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO_VALUE_INVALID = 0xEE	\/**< GPIO is not set as an input or output *\/$/;"	e	enum:__anon9
MCP2221_GPIO_VALUE_LOW	MCP2221A/lib/libmcp2221.h	/^	MCP2221_GPIO_VALUE_LOW = 0,			\/**< GPIO pin reads LOW *\/$/;"	e	enum:__anon9
MCP2221_I2CRW_NORMAL	MCP2221A/lib/libmcp2221.h	/^	MCP2221_I2CRW_NORMAL = 0,$/;"	e	enum:__anon15
MCP2221_I2CRW_NOSTOP	MCP2221A/lib/libmcp2221.h	/^	MCP2221_I2CRW_NOSTOP = 2$/;"	e	enum:__anon15
MCP2221_I2CRW_REPEATED	MCP2221A/lib/libmcp2221.h	/^	MCP2221_I2CRW_REPEATED = 1,$/;"	e	enum:__anon15
MCP2221_I2C_ADDRNOTFOUND	MCP2221A/lib/libmcp2221.h	/^	MCP2221_I2C_ADDRNOTFOUND = 37, \/\/ WR NACK$/;"	e	enum:__anon4
MCP2221_I2C_DATAREADY	MCP2221A/lib/libmcp2221.h	/^	MCP2221_I2C_DATAREADY = 85,$/;"	e	enum:__anon4
MCP2221_I2C_IDLE	MCP2221A/lib/libmcp2221.h	/^	MCP2221_I2C_IDLE = 0,$/;"	e	enum:__anon4
MCP2221_I2C_UNKNOWN1	MCP2221A/lib/libmcp2221.h	/^	MCP2221_I2C_UNKNOWN1 = 98 \/\/ stop timeout$/;"	e	enum:__anon4
MCP2221_INT_TRIG_BOTH	MCP2221A/lib/libmcp2221.h	/^	MCP2221_INT_TRIG_BOTH = 0b00001010		\/**< Trigger on either rising or falling edge (MCP2221_INT_TRIG_RISING | MCP2221_INT_TRIG_FALLING) *\/	\/\/ TODO maybe just OR the 2 values above?$/;"	e	enum:__anon7
MCP2221_INT_TRIG_FALLING	MCP2221A/lib/libmcp2221.h	/^	MCP2221_INT_TRIG_FALLING = 0b00000010,	\/**< Trigger on falling edge *\/$/;"	e	enum:__anon7
MCP2221_INT_TRIG_INVALID	MCP2221A/lib/libmcp2221.h	/^	MCP2221_INT_TRIG_INVALID = 0,			\/**< Invalid *\/$/;"	e	enum:__anon7
MCP2221_INT_TRIG_RISING	MCP2221A/lib/libmcp2221.h	/^	MCP2221_INT_TRIG_RISING = 0b00001000,	\/**< Trigger on rising edge *\/$/;"	e	enum:__anon7
MCP2221_INVALID_ARG	MCP2221A/lib/libmcp2221.h	/^	MCP2221_INVALID_ARG = -2,	\/**< Invalid argument supplied, probably a null pointer *\/$/;"	e	enum:__anon3
MCP2221_PWRSRC_BUSPOWERED	MCP2221A/lib/libmcp2221.h	/^	MCP2221_PWRSRC_BUSPOWERED = 0$/;"	e	enum:__anon11
MCP2221_PWRSRC_SELFPOWERED	MCP2221A/lib/libmcp2221.h	/^	MCP2221_PWRSRC_SELFPOWERED = 0x40,$/;"	e	enum:__anon11
MCP2221_REPORT_SIZE	MCP2221A/lib/libmcp2221.h	25;"	d
MCP2221_STR_LEN	MCP2221A/lib/libmcp2221.h	15;"	d
MCP2221_SUCCESS	MCP2221A/lib/libmcp2221.h	/^	MCP2221_SUCCESS = 0,		\/**< All is well *\/$/;"	e	enum:__anon3
MCP2221_WAKEUP_DISABLED	MCP2221A/lib/libmcp2221.h	/^	MCP2221_WAKEUP_DISABLED = 0,	\/**< Disable USB host wakeup *\/$/;"	e	enum:__anon12
MCP2221_WAKEUP_ENABLED	MCP2221A/lib/libmcp2221.h	/^	MCP2221_WAKEUP_ENABLED = 0x20	\/**< Enable USB host wakeup *\/$/;"	e	enum:__anon12
MCP_init	MCP2221A/MCP_start.c	/^int MCP_init(mcp2221_t** myDev){$/;"	f
NEW_REPORT	MCP2221A/lib/libmcp2221.c	28;"	d	file:
PCA	PCA9685/PCA9685.c	/^}PCA;$/;"	t	typeref:struct:__anon23	file:
PCA_calcPWM	PCA9685/PCA9685.c	/^int PCA_calcPWM(PCA* pointerPCA){$/;"	f
PCA_configDevice	PCA9685/PCA9685.c	/^int PCA_configDevice(PCA* pointerPCA, mcp2221_t** mcp_dev){$/;"	f
PCA_getDeviceAddr	PCA9685/LUT_device_addr.c	/^uint8_t PCA_getDeviceAddr(int deviceNum){$/;"	f
PCA_init	PCA9685/PCA9685.c	/^int PCA_init(PCA* pointerPCA){$/;"	f
PCA_regDeviceAddr	PCA9685/PCA9685.c	/^int PCA_regDeviceAddr(PCA* pointerPCA){$/;"	f
PCA_regI2cDriver	PCA9685/PCA9685.c	/^int PCA_regI2cDriver(PCA* pointerPCA, mcp2221_t** mcp_dev){$/;"	f
PCA_reset	PCA9685/PCA9685.c	/^int PCA_reset(PCA* pointerPCA){$/;"	f
PCA_writePWM	PCA9685/PCA9685.c	/^int PCA_writePWM(PCA* pointerPCA, int MODE){$/;"	f
PCA_writePWM_2channel	PCA9685/PCA9685.c	/^int PCA_writePWM_2channel(PCA* pointerPCA, channelNum){$/;"	f
PCA_writeReg	PCA9685/PCA9685.c	/^int PCA_writeReg(uint8_t* regAddr, uint8_t regData){$/;"	f
REPORT_SIZE	MCP2221A/lib/libmcp2221.c	19;"	d	file:
SCL	MCP2221A/lib/libmcp2221.h	/^	uint8_t SCL;	\/**< I2C SCL Value *\/$/;"	m	struct:__anon20
SDA	MCP2221A/lib/libmcp2221.h	/^	uint8_t SDA;	\/**< I2C SDA Value *\/$/;"	m	struct:__anon20
Sleep	MCP2221A/lib/example.c	12;"	d	file:
UNUSED	MCP2221A/lib/libmcp2221.c	16;"	d	file:
USB_CMD_FLASHPASS	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_FLASHPASS	= 0xB2,$/;"	e	enum:__anon1	file:
USB_CMD_GETGPIO	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_GETGPIO		= 0x51,$/;"	e	enum:__anon1	file:
USB_CMD_GETSRAM	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_GETSRAM		= 0x61,$/;"	e	enum:__anon1	file:
USB_CMD_I2CREAD	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_I2CREAD		= 0x91,$/;"	e	enum:__anon1	file:
USB_CMD_I2CREAD_GET	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_I2CREAD_GET	= 0x40,$/;"	e	enum:__anon1	file:
USB_CMD_I2CREAD_REPEATSTART	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_I2CREAD_REPEATSTART		= 0x93,$/;"	e	enum:__anon1	file:
USB_CMD_I2CWRITE	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_I2CWRITE	= 0x90,$/;"	e	enum:__anon1	file:
USB_CMD_I2CWRITE_NOSTOP	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_I2CWRITE_NOSTOP			= 0x94,$/;"	e	enum:__anon1	file:
USB_CMD_I2CWRITE_REPEATSTART	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_I2CWRITE_REPEATSTART	= 0x92,$/;"	e	enum:__anon1	file:
USB_CMD_READFLASH	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_READFLASH	= 0xB0,$/;"	e	enum:__anon1	file:
USB_CMD_RESET	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_RESET		= 0x70$/;"	e	enum:__anon1	file:
USB_CMD_SETGPIO	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_SETGPIO		= 0x50,$/;"	e	enum:__anon1	file:
USB_CMD_SETSRAM	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_SETSRAM		= 0x60,$/;"	e	enum:__anon1	file:
USB_CMD_STATUSSET	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_STATUSSET	= 0x10,$/;"	e	enum:__anon1	file:
USB_CMD_WRITEFLASH	MCP2221A/lib/libmcp2221.c	/^	USB_CMD_WRITEFLASH	= 0xB1,$/;"	e	enum:__anon1	file:
USBget	MCP2221A/lib/libmcp2221.c	/^static mcp2221_error USBget(mcp2221_t* device, void* data)$/;"	f	file:
USBsend	MCP2221A/lib/libmcp2221.c	/^static mcp2221_error USBsend(mcp2221_t* device, void* data)$/;"	f	file:
_BSD_SOURCE	MCP2221A/lib/example.c	10;"	d	file:
addUsbDevList	MCP2221A/lib/libmcp2221.c	/^static void addUsbDevList(int id, struct hid_device_info* dev2)$/;"	f	file:
address	PCA9685/PCA9685.c	/^    uint8_t address;$/;"	m	struct:__anon23	file:
calcPWM	PCA9685/PCA9685.c	/^int calcPWM( int PWM, int delay, int width, int* onCount, int* offCount){$/;"	f
calcPWM	Testing/pwmControl.c	/^int calcPWM(    \/\/ Input $/;"	f
checkThing	MCP2221A/lib/libmcp2221.c	/^static int checkThing(wchar_t* val1, wchar_t* val2)$/;"	f	file:
clearReport	MCP2221A/lib/libmcp2221.c	/^static void clearReport(void* report)$/;"	f	file:
clearUsbDevList	MCP2221A/lib/libmcp2221.c	/^static void clearUsbDevList(void)$/;"	f	file:
conf	MCP2221A/lib/libmcp2221.h	/^	mcp2221_gpioconf_t conf[MCP2221_GPIO_COUNT];$/;"	m	struct:__anon22
current_channelNum	PCA9685/PCA9685.c	/^    int current_channelNum; \/\/hold current channel of attention$/;"	m	struct:__anon23	file:
current_pwmVal	PCA9685/PCA9685.c	/^    int current_pwmVal;        \/\/ hold pwm value for current channel$/;"	m	struct:__anon23	file:
debug_printf	MCP2221A/lib/libmcp2221.c	31;"	d	file:
debug_printf	MCP2221A/lib/libmcp2221.c	34;"	d	file:
debug_puts	MCP2221A/lib/libmcp2221.c	32;"	d	file:
debug_puts	MCP2221A/lib/libmcp2221.c	35;"	d	file:
devList	MCP2221A/lib/libmcp2221.c	/^static device_list_t* devList;$/;"	v	file:
devPath	MCP2221A/lib/libmcp2221.c	/^	char* devPath;			\/\/ Device path (this is unique to each physical device)$/;"	m	struct:device_list_t	file:
deviceNum	PCA9685/PCA9685.c	/^    int deviceNum;$/;"	m	struct:__anon23	file:
device_list_t	MCP2221A/lib/libmcp2221.c	/^struct device_list_t{$/;"	s	file:
device_list_t	MCP2221A/lib/libmcp2221.c	/^typedef struct device_list_t device_list_t;$/;"	t	typeref:struct:device_list_t	file:
direction	MCP2221A/lib/libmcp2221.h	/^	mcp2221_gpio_direction_t direction;	\/**< Direction (GPIO mode only) *\/$/;"	m	struct:__anon21
doTransaction	MCP2221A/lib/libmcp2221.c	/^static mcp2221_error doTransaction(mcp2221_t* device, uint8_t* report)$/;"	f	file:
doUSBget	MCP2221A/lib/libmcp2221.c	/^static mcp2221_error doUSBget(hid_device* handle, void* data)$/;"	f	file:
doUSBsend	MCP2221A/lib/libmcp2221.c	/^static mcp2221_error doUSBsend(hid_device* handle, void* data)$/;"	f	file:
factorySerial	MCP2221A/lib/libmcp2221.h	/^	char factorySerial[60];					\/**< Factory serial *\/$/;"	m	struct:__anon18
factorySerialLen	MCP2221A/lib/libmcp2221.h	/^	uint8_t factorySerialLen;				\/**< Factory serial length (usually 8) *\/$/;"	m	struct:__anon18
firmware	MCP2221A/lib/libmcp2221.h	/^	char firmware[2];						\/**< Firmware version *\/$/;"	m	struct:__anon18
flash_section_t	MCP2221A/lib/libmcp2221.c	/^}flash_section_t;$/;"	t	typeref:enum:__anon2	file:
getChannelReg	PCA9685/LUT_PCA9685_reg.c	/^int getChannelReg(int chNum, uint8_t* regList){$/;"	f
getDescriptor	MCP2221A/lib/libmcp2221.c	/^static mcp2221_error getDescriptor(mcp2221_t* device, uint8_t* report, wchar_t* dest, flash_section_t descriptor)$/;"	f	file:
getDescriptor2	MCP2221A/lib/libmcp2221.c	/^static mcp2221_error getDescriptor2(mcp2221_t* device, wchar_t* buffer, flash_section_t section)$/;"	f	file:
getResponse	MCP2221A/lib/libmcp2221.c	/^static mcp2221_error getResponse(mcp2221_t* device, uint8_t* report, uint8_t type)$/;"	f	file:
getUSBInfo	MCP2221A/lib/libmcp2221.c	/^static mcp2221_error getUSBInfo(mcp2221_t* device)$/;"	f	file:
getUserInput	Testing/UserInput-Output/getData.c	/^int getUserInput(   const char* msg, \/\/ string message UI$/;"	f
gpioCache	MCP2221A/lib/libmcp2221.h	/^	uint8_t gpioCache[MCP2221_GPIO_COUNT];	\/**< GPIO config cache *\/$/;"	m	struct:__anon19
gpios	MCP2221A/lib/libmcp2221.h	/^	int gpios;							\/**< Which pins to operate on (see ::mcp2221_gpio_t) *\/ \/\/ TODO: change to mcp2221_gpio_t ?$/;"	m	struct:__anon21
handle	MCP2221A/lib/libmcp2221.h	/^	void* handle;	\/**< Device handle *\/$/;"	m	struct:__anon19
hardware	MCP2221A/lib/libmcp2221.h	/^	char hardware[2];						\/**< Hardware version *\/$/;"	m	struct:__anon18
id	MCP2221A/lib/libmcp2221.c	/^	int id;					\/\/ ID$/;"	m	struct:device_list_t	file:
main	MCP2221A/lib/example.c	/^int main(void)$/;"	f
main	PCA9685/LUT_PCA9685_reg.c	/^int main(void){$/;"	f
main	PCA9685/LUT_device_addr.c	/^int main(void){$/;"	f
main	Testing/UserInput-Output/getData.c	/^int main(void) {$/;"	f
main	Testing/UserInput-Output/writeFile.c	/^int main (){$/;"	f
main	Testing/pwmControl.c	/^int main(void){$/;"	f
main	main.c	/^int main(void){$/;"	f
manufacturer	MCP2221A/lib/libmcp2221.h	/^	wchar_t manufacturer[MCP2221_STR_LEN];	\/**< Enumerated manufacturer descriptor *\/$/;"	m	struct:__anon18
mcp2221_GPIOConfInit	MCP2221A/lib/libmcp2221.c	/^mcp2221_gpioconfset_t LIB_EXPORT mcp2221_GPIOConfInit()$/;"	f
mcp2221_adc_ref_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_adc_ref_t;$/;"	t	typeref:enum:__anon6
mcp2221_clearInterrupt	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_clearInterrupt(mcp2221_t* device)$/;"	f
mcp2221_clkdiv_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_clkdiv_t;$/;"	t	typeref:enum:__anon13
mcp2221_clkduty_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_clkduty_t;$/;"	t	typeref:enum:__anon14
mcp2221_close	MCP2221A/lib/libmcp2221.c	/^void LIB_EXPORT mcp2221_close(mcp2221_t* device)$/;"	f
mcp2221_dac_ref_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_dac_ref_t;$/;"	t	typeref:enum:__anon5
mcp2221_dedipin_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_dedipin_t;$/;"	t	typeref:enum:__anon16
mcp2221_error	MCP2221A/lib/libmcp2221.h	/^}mcp2221_error;$/;"	t	typeref:enum:__anon3
mcp2221_exit	MCP2221A/lib/libmcp2221.c	/^void LIB_EXPORT mcp2221_exit()$/;"	f
mcp2221_find	MCP2221A/lib/libmcp2221.c	/^int LIB_EXPORT mcp2221_find(int vid, int pid, wchar_t* manufacturer, wchar_t* product, wchar_t* serial)$/;"	f
mcp2221_getADC	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_getADC(mcp2221_t* device, mcp2221_adc_ref_t* ref)$/;"	f
mcp2221_getClockOut	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_getClockOut(mcp2221_t* device, mcp2221_clkdiv_t* div, mcp2221_clkduty_t* duty)$/;"	f
mcp2221_getDAC	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_getDAC(mcp2221_t* device, mcp2221_dac_ref_t* ref, int* value)$/;"	f
mcp2221_getGPIO	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_getGPIO(mcp2221_t* device, mcp2221_gpioconfset_t* confGet)$/;"	f
mcp2221_getInterrupt	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_getInterrupt(mcp2221_t* device, mcp2221_int_trig_t* trig)$/;"	f
mcp2221_gpio_direction_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_gpio_direction_t;$/;"	t	typeref:enum:__anon10
mcp2221_gpio_mode_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_gpio_mode_t;$/;"	t	typeref:enum:__anon8
mcp2221_gpio_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_gpio_t;$/;"	t	typeref:enum:__anon17
mcp2221_gpio_value_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_gpio_value_t;$/;"	t	typeref:enum:__anon9
mcp2221_gpioconf_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_gpioconf_t;$/;"	t	typeref:struct:__anon21
mcp2221_gpioconfset_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_gpioconfset_t;$/;"	t	typeref:struct:__anon22
mcp2221_i2cCancel	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_i2cCancel(mcp2221_t* device)$/;"	f
mcp2221_i2cDivider	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_i2cDivider(mcp2221_t* device, int i2cdiv)$/;"	f
mcp2221_i2cGet	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_i2cGet(mcp2221_t* device, void* data, int len)$/;"	f
mcp2221_i2cRead	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_i2cRead(mcp2221_t* device, int address, int len, mcp2221_i2crw_t type)$/;"	f
mcp2221_i2cReadPins	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_i2cReadPins(mcp2221_t* device, mcp2221_i2cpins_t* pins)$/;"	f
mcp2221_i2cState	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_i2cState(mcp2221_t* device, mcp2221_i2c_state_t* state)$/;"	f
mcp2221_i2cWrite	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_i2cWrite(mcp2221_t* device, int address, void* data, int len, mcp2221_i2crw_t type)$/;"	f
mcp2221_i2c_state_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_i2c_state_t;$/;"	t	typeref:enum:__anon4
mcp2221_i2cpins_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_i2cpins_t;$/;"	t	typeref:struct:__anon20
mcp2221_i2crw_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_i2crw_t;$/;"	t	typeref:enum:__anon15
mcp2221_init	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_init()$/;"	f
mcp2221_int_trig_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_int_trig_t;$/;"	t	typeref:enum:__anon7
mcp2221_isConnected	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_isConnected(mcp2221_t* device)$/;"	f
mcp2221_loadADC	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_loadADC(mcp2221_t* device, mcp2221_adc_ref_t* ref)$/;"	f
mcp2221_loadClockOut	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_loadClockOut(mcp2221_t* device, mcp2221_clkdiv_t* div, mcp2221_clkduty_t* duty)$/;"	f
mcp2221_loadDAC	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_loadDAC(mcp2221_t* device, mcp2221_dac_ref_t* ref, int* value)$/;"	f
mcp2221_loadGPIOConf	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_loadGPIOConf(mcp2221_t* device, mcp2221_gpioconfset_t* confGet)$/;"	f
mcp2221_loadInterrupt	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_loadInterrupt(mcp2221_t* device, mcp2221_int_trig_t* trig)$/;"	f
mcp2221_loadManufacturer	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_loadManufacturer(mcp2221_t* device, wchar_t* buffer)$/;"	f
mcp2221_loadMilliamps	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_loadMilliamps(mcp2221_t* device, int* milliamps)$/;"	f
mcp2221_loadPolarity	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_loadPolarity(mcp2221_t* device, mcp2221_dedipin_t pin, int* polarity)$/;"	f
mcp2221_loadPowerSource	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_loadPowerSource(mcp2221_t* device, mcp2221_pwrsrc_t* source)$/;"	f
mcp2221_loadProduct	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_loadProduct(mcp2221_t* device, wchar_t* buffer)$/;"	f
mcp2221_loadRemoteWakeup	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_loadRemoteWakeup(mcp2221_t* device, mcp2221_wakeup_t* wakeup)$/;"	f
mcp2221_loadSerial	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_loadSerial(mcp2221_t* device, wchar_t* buffer)$/;"	f
mcp2221_loadSerialEnumerate	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_loadSerialEnumerate(mcp2221_t* device, int* enumerate)$/;"	f
mcp2221_loadVIDPID	MCP2221A/lib/libmcp2221.c	/^mcp2221_error mcp2221_loadVIDPID(mcp2221_t* device, int* vid, int* pid)$/;"	f
mcp2221_open	MCP2221A/lib/libmcp2221.c	/^mcp2221_t* LIB_EXPORT mcp2221_open()$/;"	f
mcp2221_open_byIndex	MCP2221A/lib/libmcp2221.c	/^mcp2221_t* LIB_EXPORT mcp2221_open_byIndex(int idx)$/;"	f
mcp2221_open_bySerial	MCP2221A/lib/libmcp2221.c	/^mcp2221_t* LIB_EXPORT mcp2221_open_bySerial(wchar_t* serial)$/;"	f
mcp2221_pwrsrc_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_pwrsrc_t;$/;"	t	typeref:enum:__anon11
mcp2221_rawReport	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_rawReport(mcp2221_t* device, uint8_t* report)$/;"	f
mcp2221_readADC	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_readADC(mcp2221_t* device, int values[MCP2221_ADC_COUNT])$/;"	f
mcp2221_readGPIO	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_readGPIO(mcp2221_t* device, mcp2221_gpio_value_t values[MCP2221_GPIO_COUNT])$/;"	f
mcp2221_readInterrupt	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_readInterrupt(mcp2221_t* device, int* state)$/;"	f
mcp2221_reset	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_reset(mcp2221_t* device)$/;"	f
mcp2221_sameDevice	MCP2221A/lib/libmcp2221.c	/^int LIB_EXPORT mcp2221_sameDevice(mcp2221_t* dev1, mcp2221_t* dev2)$/;"	f
mcp2221_saveADC	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_saveADC(mcp2221_t* device, mcp2221_adc_ref_t ref)$/;"	f
mcp2221_saveClockOut	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_saveClockOut(mcp2221_t* device, mcp2221_clkdiv_t clkdiv, mcp2221_clkduty_t duty)$/;"	f
mcp2221_saveDAC	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_saveDAC(mcp2221_t* device, mcp2221_dac_ref_t ref, int value)$/;"	f
mcp2221_saveGPIOConf	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_saveGPIOConf(mcp2221_t* device, mcp2221_gpioconfset_t* confSet)$/;"	f
mcp2221_saveInterrupt	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_saveInterrupt(mcp2221_t* device, mcp2221_int_trig_t trig)$/;"	f
mcp2221_saveManufacturer	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_saveManufacturer(mcp2221_t* device, wchar_t* buffer)$/;"	f
mcp2221_saveMilliamps	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_saveMilliamps(mcp2221_t* device, int milliamps)$/;"	f
mcp2221_savePolarity	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_savePolarity(mcp2221_t* device, mcp2221_dedipin_t pin, int polarity)$/;"	f
mcp2221_savePowerSource	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_savePowerSource(mcp2221_t* device, mcp2221_pwrsrc_t source)$/;"	f
mcp2221_saveProduct	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_saveProduct(mcp2221_t* device, wchar_t* buffer)$/;"	f
mcp2221_saveRemoteWakeup	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_saveRemoteWakeup(mcp2221_t* device, mcp2221_wakeup_t wakeup)$/;"	f
mcp2221_saveSerial	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_saveSerial(mcp2221_t* device, wchar_t* buffer)$/;"	f
mcp2221_saveSerialEnumerate	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_saveSerialEnumerate(mcp2221_t* device, int enumerate)$/;"	f
mcp2221_saveVIDPID	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_saveVIDPID(mcp2221_t* device, int vid, int pid)$/;"	f
mcp2221_setADC	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_setADC(mcp2221_t* device, mcp2221_adc_ref_t ref)$/;"	f
mcp2221_setClockOut	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_setClockOut(mcp2221_t* device, mcp2221_clkdiv_t div, mcp2221_clkduty_t duty)$/;"	f
mcp2221_setDAC	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_setDAC(mcp2221_t* device, mcp2221_dac_ref_t ref, int value)$/;"	f
mcp2221_setGPIO	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_setGPIO(mcp2221_t* device, mcp2221_gpio_t pins, mcp2221_gpio_value_t value)$/;"	f
mcp2221_setGPIOConf	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_setGPIOConf(mcp2221_t* device, mcp2221_gpioconfset_t* confSet)$/;"	f
mcp2221_setInterrupt	MCP2221A/lib/libmcp2221.c	/^mcp2221_error LIB_EXPORT mcp2221_setInterrupt(mcp2221_t* device, mcp2221_int_trig_t trig, int clearInt)$/;"	f
mcp2221_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_t;$/;"	t	typeref:struct:__anon19
mcp2221_usbinfo_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_usbinfo_t;$/;"	t	typeref:struct:__anon18
mcp2221_wakeup_t	MCP2221A/lib/libmcp2221.h	/^}mcp2221_wakeup_t;$/;"	t	typeref:enum:__anon12
mcp_dev	PCA9685/PCA9685.c	/^    mcp2221_t** mcp_dev;$/;"	m	struct:__anon23	file:
milliamps	MCP2221A/lib/libmcp2221.h	/^	int milliamps;							\/**< Enumerated current limit *\/$/;"	m	struct:__anon18
mode	MCP2221A/lib/libmcp2221.h	/^	mcp2221_gpio_mode_t mode;			\/**< Mode *\/$/;"	m	struct:__anon21
next	MCP2221A/lib/libmcp2221.c	/^	device_list_t* next;	\/\/ Next device in list$/;"	m	struct:device_list_t	file:
offCount	PCA9685/PCA9685.c	/^    int offCount[16];$/;"	m	struct:__anon23	file:
onCount	PCA9685/PCA9685.c	/^    int onCount[16];$/;"	m	struct:__anon23	file:
open	MCP2221A/lib/libmcp2221.c	/^static mcp2221_t* open(char* devPath)$/;"	f	file:
path	MCP2221A/lib/libmcp2221.h	/^	char* path;		\/**< Device path, used to identify the physical device *\/$/;"	m	struct:__anon19
pid	MCP2221A/lib/libmcp2221.h	/^	int pid;								\/**< PID *\/$/;"	m	struct:__anon18
powerSource	MCP2221A/lib/libmcp2221.h	/^	mcp2221_pwrsrc_t powerSource;			\/**< Power source *\/$/;"	m	struct:__anon18
print_uint_array	PCA9685/LUT_PCA9685_reg.c	/^int print_uint_array(uint8_t* arr, int size){$/;"	f
product	MCP2221A/lib/libmcp2221.h	/^	wchar_t product[MCP2221_STR_LEN];		\/**< Enumerated product descriptor *\/$/;"	m	struct:__anon18
pwmVal	PCA9685/PCA9685.c	/^    int pwmVal[16];$/;"	m	struct:__anon23	file:
remoteWakeup	MCP2221A/lib/libmcp2221.h	/^	mcp2221_wakeup_t remoteWakeup;			\/**< Remote USB host wakeup *\/$/;"	m	struct:__anon18
roundNo	Testing/pwmControl.c	/^int roundNo(float num){ $/;"	f
saveReport	MCP2221A/lib/libmcp2221.c	/^static int saveReport(mcp2221_t* device, uint8_t* report)$/;"	f	file:
saveReportUpdate	MCP2221A/lib/libmcp2221.c	/^static void saveReportUpdate(uint8_t* report, uint8_t* reportUpdate)$/;"	f	file:
serial	MCP2221A/lib/libmcp2221.c	/^	wchar_t* serial;		\/\/ Serial number$/;"	m	struct:device_list_t	file:
serial	MCP2221A/lib/libmcp2221.h	/^	wchar_t serial[MCP2221_STR_LEN];		\/**< Enumerated serial descriptor *\/$/;"	m	struct:__anon18
setDescriptor	MCP2221A/lib/libmcp2221.c	/^static mcp2221_error setDescriptor(mcp2221_t* device, wchar_t* buffer, flash_section_t section)$/;"	f	file:
setReport	MCP2221A/lib/libmcp2221.c	/^static mcp2221_error setReport(mcp2221_t* device, uint8_t* report, uint8_t type)$/;"	f	file:
updateGPIOCache	MCP2221A/lib/libmcp2221.c	/^static mcp2221_error updateGPIOCache(mcp2221_t* device)$/;"	f	file:
usbInfo	MCP2221A/lib/libmcp2221.h	/^	mcp2221_usbinfo_t usbInfo;$/;"	m	struct:__anon19
usb_cmd_t	MCP2221A/lib/libmcp2221.c	/^}usb_cmd_t;$/;"	t	typeref:enum:__anon1	file:
value	MCP2221A/lib/libmcp2221.h	/^	mcp2221_gpio_value_t value;			\/**< Value (GPIO mode only) *\/$/;"	m	struct:__anon21
vid	MCP2221A/lib/libmcp2221.h	/^	int vid;								\/**< VID *\/$/;"	m	struct:__anon18
write2file	Testing/UserInput-Output/writeFile.c	/^int write2file(const char* path, const char * mode, int* Arr, int ArrLen){$/;"	f
